

# =============提醒==========
#只有以 VITE_ 开头的变量会被嵌入到客户端侧的包中，你可以在项目代码中这样访问它们：console.log(import.meta.env.VITE_PROT);
#以 VITE_GLOB_* 开头的的变量，在打包的时候，会被加入_app.config.js配置文件当中.
#当执行yarn build构建项目之后，会自动生成 _app.config.js 文件并插入 index.html。 开发环境不会生成_app.config.js
#_app.config.js 用于项目在打包后，需要动态修改配置的需求，如接口地址。不用重新进行打包，可在打包后修改 /dist/_app.config.js 内的变量，刷新即可更新代码内的局部变量。
#// _app.config.js
#// 变量名命名规则  __PRODUCTION__xxx_CONF__   xxx：为.env配置的VITE_GLOB_APP_SHORT_NAME
#window.__PRODUCTION__VUE_VBEN_ADMIN__CONF__ = {
#  VITE_GLOB_APP_TITLE: 'vben admin',
#  VITE_GLOB_APP_SHORT_NAME: 'vue_vben_admin',
#  VITE_GLOB_API_URL: '/app',
#  VITE_GLOB_API_URL_PREFIX: '/',
#  VITE_GLOB_UPLOAD_URL: '/upload',
#};
# =============提醒==========



# 是否开启mock数据，关闭时需要自行对接后台接口
VITE_USE_MOCK = true

# 资源公共路径,需要以 /开头和结尾
VITE_PUBLIC_PATH = /

# 跨域代理，您可以配置多个 ,请注意，没有换行符
#note:注意请求都是以/jeecgboot开头，而且mock/_util.ts文件中也是配置了 mockBaseURL: '/jeecgboot/mock',所以如果我们想让请求进入到mock
#那么请求 应该以 /jeecgboot/mock/开头，比如/jeect/mock/product/list,这样会进入到mock，mock中配置的mockMethod都是以/jeecg/mock开头的url
VITE_PROXY = [["/jeecgboot","http://localhost:8080/jeecg-boot"],["/upload","http://localhost:3300/upload"]]

#后台接口全路径地址(必填)
VITE_GLOB_DOMAIN_URL=http://localhost:8080/jeecg-boot

#后台接口父地址(必填)
VITE_GLOB_API_URL=/jeecgboot

# 接口前缀
VITE_GLOB_API_URL_PREFIX=

#微前端qiankun应用,命名必须以VITE_APP_SUB_开头,jeecg-app-1为子应用的项目名称,也是子应用的路由父路径
VITE_APP_SUB_jeecg-app-1 = '//localhost:8092'
